CREATE TABLE IF NOT EXISTS salesperson(
    salesperson_id SERIAL PRIMARY KEY,
    first_name VARCHAR(45),
    last_name VARCHAR(45)
);
CREATE TABLE IF NOT EXISTS customer(
    customer_id SERIAL PRIMARY KEY,
    first_name VARCHAR(45),
    last_name VARCHAR(45)
);
CREATE TABLE IF NOT EXISTS car(
    car_id SERIAL PRIMARY KEY,
    make VARCHAR(25),
    model VARCHAR(25),
    year_ INTEGER,
    color VARCHAR(25),
    new_car_cost NUMERIC(10,2)
);
CREATE TABLE IF NOT EXISTS mechanic(
    mechanic_id SERIAL PRIMARY KEY,
    first_name VARCHAR(45),
    last_name VARCHAR(45)
);
CREATE TABLE IF NOT EXISTS services(
    service_id SERIAL PRIMARY KEY,
    service_name VARCHAR(50),
    service_cost NUMERIC(10,2)
);
CREATE TABLE IF NOT EXISTS parts(
    parts_id SERIAL PRIMARY KEY,
    part_name VARCHAR(30),
    part_cost NUMERIC(10,2)
);
CREATE TABLE IF NOT EXISTS new_car_invoice(
    car_invoice_id SERIAL PRIMARY KEY,
    purchase_date DATE DEFAULT CURRENT_DATE,
    salesperson_id INTEGER NOT NULL,
    customer_id INTEGER NOT NULL,
    car_id INTEGER NOT NULL,
    FOREIGN KEY(salesperson_id) REFERENCES salesperson(salesperson_id),
    FOREIGN KEY(customer_id) REFERENCES customer(customer_id),
    FOREIGN KEY(car_id) REFERENCES car(car_id)
);
CREATE TABLE IF NOT EXISTS service_invoice(
    service_invoice_id SERIAL PRIMARY KEY,
    service_id INTEGER NOT NULL,
    customer_id INTEGER NOT NULL,
    car_id INTEGER NOT NULL,
    parts_id INTEGER NOT NULL,
    mechanic_id INTEGER NOT NULL,
    FOREIGN KEY(service_id) REFERENCES services(service_id),
    FOREIGN KEY(customer_id) REFERENCES customer(customer_id),
    FOREIGN KEY(car_id) REFERENCES car(car_id),
    FOREIGN KEY(parts_id) REFERENCES parts(parts_id),
    FOREIGN KEY(mechanic_id) REFERENCES mechanic(mechanic_id)
);
CREATE TABLE IF NOT EXISTS service_history(
    service_hx_id SERIAL PRIMARY KEY,
    service_invoice_id INTEGER NOT NULL,
    car_id INTEGER NOT NULL,
    FOREIGN KEY(service_invoice_id) REFERENCES service_invoice(service_invoice_id),
    FOREIGN KEY(car_id) REFERENCES car(car_id)
);

INSERT INTO customer(
    first_name,
    last_name
) VALUES (
    'John',
    'Anday'
);

INSERT INTO customer(
    first_name,
    last_name
) VALUES (
    'Amanda',
    'Lord'
);
INSERT INTO mechanic(
    first_name,
    last_name
) VALUES (
    'Johnny',
    'Rocket'
);
INSERT INTO mechanic(
    first_name,
    last_name
) VALUES (
    'Raymond',
    'Doppelgang'
);
INSERT INTO salesperson(
    first_name,
    last_name
) VALUES (
    'Ashley',
    'Brace'
);
INSERT INTO salesperson(
    first_name,
    last_name
) VALUES (
    'Christian',
    'Merina'
);
INSERT INTO car(
    make,
    model,
    year_,
    color,
    new_car_cost
) VALUES(
    'Ford',
    'Mustang',
    '2022',
    'Red',
    60000.00
);
INSERT INTO car(
    make,
    model,
    year_,
    color,
    new_car_cost
) VALUES(
    'Mazda',
    'MX-5',
    '2022',
    'Yellow',
    45000.00
);
INSERT INTO services(
    service_name,
    service_cost
) VALUES(
    'Oil Change',
    200.00
);
INSERT INTO services(
    service_name,
    service_cost
) VALUES(
    'Realignment',
    500.00
);
INSERT INTO parts(
    part_name,
    part_cost
)VALUES (
    'Muffler',
    600.00
);
INSERT INTO parts(
    part_name,
    part_cost
)VALUES (
    'Tires',
    800.00
);
CREATE OR REPLACE FUNCTION add_new_car_invoice(_salesperson_id INTEGER,_customer_id INTEGER,_car_id INTEGER)
RETURNS void 
AS $MAIN$
BEGIN
	INSERT INTO new_car_invoice(salesperson_id,customer_id,car_id)
	VALUES(_salesperson_id, _customer_id, _car_id);
END;
$MAIN$
LANGUAGE plpgsql;

SELECT add_new_car_invoice(1,1,1);
SELECT add_new_car_invoice(2,2,2);

CREATE OR REPLACE FUNCTION add_service_invoice(_service_id INTEGER,_customer_id INTEGER,_car_id INTEGER,_parts_id INTEGER,_mechanic_id INTEGER)
RETURNS void 
AS $MAIN$
BEGIN
	INSERT INTO service_invoice(service_id,customer_id,car_id,parts_id,mechanic_id)
	VALUES(_service_id,_customer_id,_car_id,_parts_id,_mechanic_id);
END;
$MAIN$
LANGUAGE plpgsql;

SELECT add_service_invoice(1,1,1,1,1);
SELECT add_service_invoice(2,2,2,2,2);

INSERT INTO service_history(
    service_invoice_id,
    car_id
) VALUES (
    1,
    1
);
INSERT INTO service_history(
    service_invoice_id,
    car_id
) VALUES (
    2,
    2
);